FROM python:3.6-slim as base

RUN apt-get update -qq \
 && apt-get install -y --no-install-recommends \
    # required by psycopg2 at build and runtime
    libpq-dev \
     # required for health check
    curl \
 && apt-get autoremove -y

RUN apt-get update -qq && \
  apt-get install -y --no-install-recommends \
  build-essential \
  wget \
  openssh-client \
  graphviz \
  graphviz-dev \
  python-tk \
  pkg-config \
  git-core \
  openssl \
  libssl-dev \
  libffi6 \
  libffi-dev \
  libpng-dev

# install poetry
# keep this in sync with the version in pyproject.toml and Dockerfile
ENV POETRY_VERSION 1.0.3
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
ENV PATH "/root/.poetry/bin:/opt/venv/bin:${PATH}"

# Copy only requirements to cache them in docker layer
WORKDIR /code
COPY poetry.lock pyproject.toml /code/

# Install dependencies
RUN pip install --no-cache-dir -U 'pip<20' && \
    poetry config virtualenvs.create false && \
    poetry install --no-root --no-interaction

# Creating folders, and files for a project:
COPY . /code

ENV PIP_USE_PEP517 false
RUN make install
RUN pip install spacy==2.1.9 --no-deps
RUN make prepare-tests-files
RUN pip install -U git+https://github.com/tmbo/MITIE.git#egg=mitie
RUN poetry install -E full

# change shell
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# the entry point
EXPOSE 5005

# ENTRYPOINT ["tail", "-f", "/dev/null"]
ENTRYPOINT ["python", "-m", "rasa"]
CMD ["--help"]

